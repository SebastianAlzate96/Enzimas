# -*- coding: utf-8 -*-
"""Promedios_datos_experimentales_trayectoria.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11fezD1B5NMuSC_T66hfNCF8YwJl6en2z
"""

import numpy as np
import pandas as pd
from hmmlearn import hmm

table_means = np.zeros((1, 5))

np.random.seed(1)
n_states=4

cond=[0.0,0.1,0.2,0.4,0.6,0.8,1.0,1.5,2.0,3.0]
trayec=[1,2,3,4]

for n in range(len(cond)):
  filename='C:/Users/sebas/Desktop/Enzimas/data_all.csv'
  df=pd.read_csv(filename,sep=",")
  new_column_names = ['num', 'Time', 'Acceptor', 'donor', 'condition', 'trayectory']
  df.columns = pd.Index(new_column_names)

  df=df[df['condition']==cond[n]]
  df=df[df['trayectory']==trayec[3]]


  X=np.zeros([len(df['Acceptor']),2])
  X[:,0]=df['Acceptor']
  X[:,1]=df['donor']


  markovmodel_P= hmm.GaussianHMM(n_components=n_states,n_iter=1000,covariance_type="full")
  markovmodel_P.fit(X) #Estima los par√°metros del modelo
    
  means_ = markovmodel_P.means_
  means_sort = np.sort(means_[:,0])
    
  means_2 = np.zeros((n_states, 2)).astype(float)

  for i in range(n_states):
    means_2[i,:]=means_[list(means_[:,0]).index(means_sort[i]),:]

  means_sum = np.array([np.transpose(means_2[:,0]+means_2[:,1])])

  means_T = np.transpose(means_2)
  means_adj = means_2-means_T[:,0]

  means_al = np.insert(means_2,means_2.shape[1],means_adj[:,0],axis=1)
  means_all = np.insert(means_al,means_al.shape[1],means_adj[:,1],axis=1)  


  means_ad = np.delete(means_2,0,0)-means_T[:,0]
  eff=np.array((means_ad[:,0]/(means_ad[:,0]+means_ad[:,1])))
  aa = np.zeros((1,1))
  eff = np.insert(aa,aa.shape[1],np.transpose(np.array([eff])),axis=1)
  eff = np.transpose(eff)

  table_all = np.insert(means_all,means_all.shape[1],eff.flatten(),axis=1)
  table_means = np.insert(table_means,table_means.shape[0],table_all,axis=0)



table_means = np.delete(table_means, 0,0) # eliminar filas de ceros
# table_means

table_means_ = pd.DataFrame(np.round(table_means,2))
table_means_.to_csv('tabla_means_trayectoria_4.csv')
print(table_means_)